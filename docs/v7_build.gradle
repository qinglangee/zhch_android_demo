buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:1.1.3'
  }
}

allprojects {
  repositories {
    mavenCentral()
  }
}

ext {
  compileSdkVersion = 19
  buildToolsVersion = "19.1"
}


apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'





//repositories {
//   mavenCentral()
//}

//dependencies {
//   compile 'com.google.inject:guice:4.0-beta5'
//}

//task copyDependencies(type: Copy) {
//   from configurations.compile
//   into 'dependencies'
//}




android {
  compileSdkVersion 19
  buildToolsVersion "19.1"

  defaultConfig {
    minSdkVersion 8
    targetSdkVersion 19
    versionCode 1
    versionName version
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
  lintOptions {
      abortOnError false
  }
      sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}



dependencies {
  //provided 'com.squareup.picasso:picasso:2.5.0'
}

task androidJavadocs(type: Javadoc) {
  source = android.sourceSets.main.java.source
}

task androidJavadocsJar(type: Jar) {
  classifier = 'javadoc'
  //basename = artifact_id
  from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  //basename = artifact_id
  from android.sourceSets.main.java.source
}

task copyDependencies(type: Copy) {
   from configurations.compile
   into 'dependencies'
} 

artifacts {
  archives androidSourcesJar
  archives androidJavadocsJar
}



